سلام
ببخشید کلا بابت امروز که نمی تونم درخدمتتون باشم + کلی احسان رو هم معطل کردم.
داکیومنت امروز رو به چهار بخش تقسیم می کنیم
۱. هدف:
احساس نیاز به سیستم های Debug ها از زمان ساخت اولین کامپیوتر هابه شدت احساس می شده. و بنابراین در تولید اولین میکروپروسسور های intel این سیستم ها در داخل cpu پیاده سازی شده اند. در سال های اخیر هم با پیدایش آرشیتکچر ARM, سیستم های Debugging به میکروکنترلر ها (با استفاده از JTAG) نیز منتقل شده. اما با این وجود، AVR ها برای حفظ قیمت پایینشان، همچنان از سیستم standard ای برای debug بی بهره اند. 
اما از اونجا که انجام debugging همواره بخش مهمدی در انجام پروژه ها است تا اینجای کار ما سعی کردیم با پیاده سازی یک سیستم ساده با استفاده از UART کارهای روزمره Debugging حودمون رو تا حدی دنبال کنیم. متاسفانه این سیستم کم کم کارایی خودش رو داره از دست می ده. که از مهمترین دلایلش می شه به single user بودن uart اشاره کرد. علاوه بر اون تمام AVR های شرکت atmel حداکثر از یک واحد UART برخوردار هستند و با این اوصاف اگر واحد USART به هر علتی مشغول باشد ( در اختیار device دیگری قرار داشته باشد) فرایند debug سخت و گاهی غیر ممکن است.بنابراین تصمیم بر آن شد که یک سیستم Debug بهتر راه اندازی شود که علاوه بر دارا بودن مزیت های سیستم قبلی مشکلات single user بودن های UART را هم برطرف کند.
۲.منابع مورد نیاز:
برای اجرای این کار منابع زیر  استفاده می شود
1.بستر I2C 
2.یک EEPROM
3.یک پایه AVR به عنوان ورودی
مزیت استفاده از I2C رفع مشکل تک کاربری بودن UART است به عبارت دیگه همونطور که احسان هم می داند I2C ها می توانند با استفاده از تنها تنها ۲ پین، به ۱۲۸ device بصورت همزمان متصل شوند که این به کلی مشکلات قبلی ما را پاسخگوست.
۳.نحوه اجرا:
برای این کار AVR در ابتدای شروع کار (هنگام reset و ابتدای main) پس از ورودی کردن pin دیباگ (به قسمت تعریف مراجعه کنید) یا به عبارت دیگر صفر کردن بیت مربوطه در DDR با الگوریتم debounce وضعیت پین را چک می کند. اگر pin active بود (مثلا push button فشار داده شده بود) وارد مد دیباگ می شویم. در غیر اینصورت در mode نرمال قرار می گیریم.
در ادامه برای جلوگیری از سردرگرمی چند تا واژه رو تعریف می کنیم
تعاریف:
۱.پین debug: یک پین دلخواه روی avr که به یک push button متصل است و اگر فشرده شود وارد مد debug می شویم
۲.مد normal: در این حالت برنامه بصورت عادی شروع به اجرا می شود و با استفاده از دستور EDebug برنامه نویس می تواند log هایی را که لازم دارد به EEPROM منتقل کند.
۳.مد debug: در این مد برنامه اصلی متوقف شده (تا زمانی که دوباره avr ریست شود و پین دیباگ دوباره چک شود) و avr با استفاده از UART قصد برقرای ارتباط با کامپیوتر را دارد. در حقیقت در avr (سرور side) ما یک کنسول پیاده سازی می کنیم که با گرفتن مثلا p (و r\n\) مثلا print کند. به عبارت دیگر در این مد avr منتظر یک command از طرف کامپیوتر می ماند. به این ترتیب برنامه نویس یک بار برنامه اش با تعداد بالایی log می نویسد. برنامه را اجرا می کند و پس از تمام شدن تست ها، میکرو را ریست می کند و با نگه داشتن push button و ریست کردن avr وارد مد debug می شود. سپس با استفاده از uart با میکرو صحبت کرده و log ها را مرور می کند. 
